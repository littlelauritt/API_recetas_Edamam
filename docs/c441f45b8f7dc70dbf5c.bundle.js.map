{"version":3,"sources":["webpack://api-recetas/./src/js/http-provider.js","webpack://api-recetas/./src/js/render-html.js","webpack://api-recetas/./src/js/paginacion.js","webpack://api-recetas/./src/index.js"],"names":["main","document","querySelector","resultadosBusqueda","getElementById","input","paginacionHTML","pagina","numeroPaginas","paginacion","async","paginaActual","from","to","datosApi","parametro","resp","fetch","ok","console","log","json","error","conexionAPI","value","Math","ceil","count","recetas","classList","remove","resultadosDibujados","forEach","receta","recipe","label","url","floor","calories","innerHTML","renderizarHTML","hits","btnPrev","btnNext","btnStart","btnEnd","totalPaginas","addEventListener","evento","preventDefault","disabled"],"mappings":"mBACA,MCCMA,EAAOC,SAASC,cAAc,QAC9BC,EAAqBF,SAASG,eAAe,sBCC7CC,EAAQJ,SAASG,eAAe,SAChCE,EAAiBL,SAASG,eAAe,cACzCG,EAASN,SAASG,eAAe,UAGvC,IAAII,EACJ,MAIaC,EAAaC,MAAOC,IAC7B,GAAIA,EAAe,GAAKA,EAAeH,EACnC,OAEJ,IAAII,EARmB,GAQXD,EARW,GASnBE,EAAKD,EATc,GAWvB,MAAME,OFdiBJ,OAAMK,EAAWH,EAAMC,KAE9C,IACG,MAAMG,QAAaC,MAAO,mCAASF,mEAAsDH,QAAWC,KAMnG,OALIG,EAAKE,IACNC,QAAQC,IAAI,2CAGKJ,EAAKK,OAG3B,MAAOC,GACL,MAAM,IEEaC,CAAYlB,EAAMmB,MAAOZ,EAAMC,GAQtD,OAPAL,EAAgBiB,KAAKC,KAAMZ,EAASa,MAZb,IActBnB,EAAgB,KAAOA,EAAgB,IDnBd,CAACoB,IAC3B5B,EAAK6B,UAAUC,OAAO,WACtB,IAAIC,EAAsB,GAE1BH,EAAQI,SAAWC,IACfF,GAA4B,wEACgBE,EAAOC,OAAY,MAAKD,EAAOC,OAAY,MAAI,uJAEjDD,EAAOC,OAAOC,oEACTF,EAAOC,OAAOE,yLAEOX,KAAKY,MAAMJ,EAAOC,OAAOI,uGACjBL,EAAOC,OAAkB,YAAKD,EAAOC,OAAkB,YAAI,6GAC3DD,EAAOC,OAAe,SAAKD,EAAOC,OAAe,SAAI,0EAGrI/B,EAAmBoC,UAAYR,GCI/BS,CAAe1B,EAAS2B,MACxBnC,EAAeuB,UAAUC,OAAO,UAChCvB,EAAOgC,UAAY,UAAU5B,QAAmBH,IAEzCA,GCtBL,EAAOP,SAASC,cAAc,QAC9BwC,EAAUzC,SAASG,eAAe,YAClCuC,EAAU1C,SAASG,eAAe,YAClCwC,EAAW3C,SAASG,eAAe,aACnCyC,EAAS5C,SAASG,eAAe,WAGvC,IACI0C,EADAnC,EAAe,EAKnB,EAAKoC,iBAAiB,UAAUrC,MAAOsC,IACnCA,EAAOC,iBACPH,QAAqBrC,EAAWE,GAChCQ,QAAQC,IAAI0B,MAEhBH,EAAQI,iBAAiB,SAAS,KAE9BJ,EAAQO,UAAW,EAEnBvC,IACAF,EAAWE,GACXgC,EAAQO,UAAW,KAEvBR,EAAQK,iBAAiB,SAAS,KAE9BL,EAAQQ,UAAW,EAEnBvC,IACAF,EAAWE,GACX+B,EAAQQ,UAAW,KAGvBN,EAASG,iBAAiB,SAAS,KAC/BH,EAASM,UAAW,EACpBvC,EAAe,EACfF,EAAWE,GACXiC,EAASM,UAAW,KAGxBL,EAAOE,iBAAiB,SAAS,KAC7BF,EAAOK,UAAW,EAClBvC,EAAemC,EACfrC,EAAWE,GACXkC,EAAOK,UAAW,M","file":"c441f45b8f7dc70dbf5c.bundle.js","sourcesContent":["// DATOS CONEXION A LA API\r\nconst APP_ID = 'b6fa4f18';\r\nconst APP_key = '98af38bcfe488890014c909664941fe5';\r\nconst API = 'https://api.edamam.com/search?q=';\r\n\r\n\r\n// CONECION A LA API\r\nexport const conexionAPI = async(parametro, from, to) => {\r\n\r\n    try{\r\n       const resp = await fetch (`${API}${parametro}&app_id=${APP_ID}&app_key=${APP_key}&from=${from}&to=${to}`); \r\n       if( !resp.ok ){\r\n           console.log('Ha habido un fallo en la conexion');\r\n       }\r\n    //    const {hits: recetas} = await resp.json();\r\n        const datos = await resp.json();\r\n        return datos;\r\n    //    return recetas;\r\n    } catch (error) {\r\n        throw (error)\r\n    }\r\n     \r\n}","\r\n// SELECCIONAMOS LOS ELEMENTOS DEL HTML\r\nconst main = document.querySelector('main');\r\nconst resultadosBusqueda = document.getElementById('resultado-busqueda');\r\n\r\nexport const renderizarHTML = (recetas) => {\r\n    main.classList.remove('inicial');\r\n    let resultadosDibujados = [];\r\n\r\n    recetas.forEach( ( receta ) => {\r\n        resultadosDibujados +=      `<div class=\"item\">\r\n                                        <img src=${(receta.recipe.image) ? (receta.recipe.image) : ('./img/imgerror.jpg')} alt=\"\">\r\n                                        <div class=\"flex-container\">\r\n                                            <h2>${receta.recipe.label}</h2>\r\n                                            <a href=\"${receta.recipe.url}\" target=\"_blank\" class=\"btn-receta\">Ir a la receta</a>\r\n                                        </div>\r\n                                        <p class=\"datos-receta\">Calorías: ${Math.floor(receta.recipe.calories)} kCal</p>\r\n                                        <p class=\"datos-receta\">Tipo de cocina: ${ (receta.recipe.cuisineType) ? (receta.recipe.cuisineType) : ('No hay información')}</p>\r\n                                        <p class=\"datos-receta\">Tipo de comida: ${ (receta.recipe.mealType) ? (receta.recipe.mealType) : ('No hay información')}</p>\r\n                                    </div>`\r\n    });\r\n    resultadosBusqueda.innerHTML = resultadosDibujados;\r\n\r\n\r\n    \r\n\r\n\r\n}","// IMPORTAMOS LAS FUNCIONES\r\nimport { conexionAPI } from './http-provider';\r\nimport { renderizarHTML } from './render-html';\r\n// ELEMENTOS DEL DOM\r\nconst input = document.getElementById('input');\r\nconst paginacionHTML = document.getElementById('paginacion');\r\nconst pagina = document.getElementById('pagina');\r\n\r\n// VARIABLES PARA LA LOGICA\r\nlet numeroPaginas;\r\nconst elementosPorPagina = 10;\r\n\r\n\r\n\r\nexport const paginacion = async (paginaActual) => {\r\n    if (paginaActual < 1 || paginaActual > numeroPaginas){\r\n        return\r\n    }\r\n    let from = (paginaActual * elementosPorPagina) - elementosPorPagina;\r\n    let to = from + elementosPorPagina;\r\n\r\n    const datosApi = await conexionAPI(input.value, from, to);\r\n    numeroPaginas = Math.ceil (datosApi.count / elementosPorPagina);\r\n    // A la API solo le dejo mostrar 100 resultados\r\n    (numeroPaginas > 10) ? (numeroPaginas = 10) : (numeroPaginas);\r\n    renderizarHTML(datosApi.hits);\r\n    paginacionHTML.classList.remove('hidden');\r\n    pagina.innerHTML = `Página ${paginaActual} de ${numeroPaginas}`;\r\n\r\n    return numeroPaginas;    \r\n}\r\n\r\n\r\n   ","// IMPORTAMOS EL CSS\r\nimport './css/style.css';\r\n\r\n// IMPORTAMOS LAS FUNCIONES\r\nimport { paginacion } from './js/paginacion';\r\n\r\n//ELEMENTOS DEL DOM\r\nconst form = document.querySelector('form');\r\nconst btnPrev = document.getElementById('btn-prev');\r\nconst btnNext = document.getElementById('btn-next');\r\nconst btnStart = document.getElementById('btn-start');\r\nconst btnEnd = document.getElementById('btn-end');\r\n\r\n// VARIABLES PARA LA PAGINACION\r\nlet paginaActual = 1;\r\nlet totalPaginas;\r\n\r\n\r\n// EVENTOS\r\nform.addEventListener('submit', async (evento) => {\r\n    evento.preventDefault();\r\n    totalPaginas = await paginacion(paginaActual);\r\n    console.log(totalPaginas);\r\n})\r\nbtnNext.addEventListener('click', () => {\r\n    // Deshabilitamos el boton para que el usuario no haga click mas de una vez\r\n    btnNext.disabled = true;\r\n    // Cuando avanzamos página queremos sumar una página más a paginaActual\r\n    paginaActual++;\r\n    paginacion(paginaActual);\r\n    btnNext.disabled = false;\r\n})\r\nbtnPrev.addEventListener('click', () => {\r\n    // Deshabilitamos el boton para que el usuario no haga click mas de una vez\r\n    btnPrev.disabled = true;\r\n    // Cuando retrocedemos página queremos restar una página a paginaActual\r\n    paginaActual--;\r\n    paginacion(paginaActual);\r\n    btnPrev.disabled = false;\r\n})\r\n\r\nbtnStart.addEventListener('click', () => {\r\n    btnStart.disabled = true;\r\n    paginaActual = 1;\r\n    paginacion(paginaActual);\r\n    btnStart.disabled = false;\r\n})\r\n\r\nbtnEnd.addEventListener('click', () => {\r\n    btnEnd.disabled = true;\r\n    paginaActual = totalPaginas;\r\n    paginacion(paginaActual);\r\n    btnEnd.disabled = false;\r\n})"],"sourceRoot":""}